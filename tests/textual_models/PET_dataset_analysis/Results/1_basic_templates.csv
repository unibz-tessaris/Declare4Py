dataset_phrase,extracted_constraints,interactions,constraint count,activities,activity_count
The MPON sents the dismissal to the MPOO. The MPOO reviews the dismissal. The MPOO opposes the dismissal of MPON or the MPOO confirmes the dismissal of the MPON.,"['existence(MPON_sends_dismissal)', 'existence(MPOO_reviews_dismissal)', 'response(MPOO_reviews_dismissal, MPOO_opposes_dismissal)', 'response(MPOO_reviews_dismissal, MPOO_confirms_dismissal)', 'not-co-existence(MPOO_opposes_dismissal, MPOO_confirms_dismissal)']",0,5,"['MPOO_confirms_dismissal', 'MPOO_opposes_dismissal', 'MPOO_reviews_dismissal', 'MPON_sends_dismissal']",4
The EC tells the INQ about the change of his master data. The INQ notifies the IP of the change. The IP checks whether the master data can be changed at the desired time. The IP confirmes the changes of the INQ or the IP rejectes the changes of the INQ.,"['existence(inform_INQ)', 'existence(check_master_data)', 'response(check_master_data, confirm_changes)', 'response(check_master_data, reject_changes)', 'precedence(inform_INQ, notify_IP)', 'precedence(notify_IP, check_master_data)', 'not-co-existence(confirm_changes, reject_changes)']",0,7,"['reject_changes', 'inform_INQ', 'check_master_data', 'notify_IP', 'confirm_changes']",5
"A customer brings in a defective computer and the CRS checks the defect and hands out a repair cost calculation back. If the customer decides that the costs are acceptable, the process continues, otherwise she takes her computer home unrepaired. The ongoing repair consists of two activities, which are executed, in an arbitrary order. The first activity is to check and repair the hardware, whereas the second activity checks and configures the software. After each of these activities, the proper system functionality is tested. If an error is detected another arbitrary repair activity is executed, otherwise the repair is finished.","['at-most(execute_repair_activity)', 'existence(hand_out_repair_cost_calculation)', 'response(hand_out_repair_cost_calculation, decide_on_costs)', 'response(check_and_repair_hardware, test_system_functionality)', 'response(check_and_configure_software, test_system_functionality)', 'response(test_system_functionality, execute_repair_activity)', 'co-existence(check_and_repair_hardware, check_and_configure_software)', 'not-co-existence(test_system_functionality, check_and_repair_hardware)', 'not-co-existence(test_system_functionality, check_and_configure_software)']",0,9,"['check_and_configure_software', 'test_system_functionality', 'decide_on_costs', 'hand_out_repair_cost_calculation', 'execute_repair_activity', 'check_and_repair_hardware']",6
"The MPON reports the meter operation to the GO. The GO examines the application of the MPON. The GO rejects the application of the MPON or the GO confirmes the application of the MPON. The GO informs the MPOO about the registration confirmation of the MPON. The GO informs the MSPO about the registration confirmation of the MPON. The MPON and the MPOO perform the equipment acquisition and / or equipment changes. The MPON informs the GO about the failure of the entire process or the MPON informs the GO about the successful completion of the entire process. The GO informs the MPON about the failure of the overall transaction by deadline if after a maximum time limit no message of the MPON is present at the GO. If the MPON informs the GO about the failure of the entire process, the GO confirms the failure of the assignment to the MPON. If the MPON informs the GO about the successful completion of the overall process, the GO assigns the MPON. The GO confirms the assignment to the MPON. The GO informs the MPOO about the failure of the assignment of the MPON or the GO informs the MPOO about the assignment of the MPON. The GO informs the MSPO about the failure of the assignment of the MPON or the GO informs the MSPO about the assignment of the MPON. The GO informs the SP about the assignment of the MPON.","['existence(reporting_meter_operation)', 'response(reporting_meter_operation, examining_application)', 'response(confirming_application, informing_mpoo_about_registration)', 'response(confirming_application, informing_mspo_about_registration)', 'response(informing_mpoo_about_registration, performing_equipment_acquisition)', 'response(informing_mspo_about_registration, performing_equipment_acquisition)', 'response(informing_go_about_failure, informing_mpon_about_failure)', 'response(informing_go_about_success, assigning_mpon)', 'response(assigning_mpon, confirming_assignment)', 'response(confirming_assignment, informing_mpoo_about_assignment)', 'response(confirming_assignment, informing_mspo_about_assignment)', 'response(confirming_assignment, informing_sp_about_assignment)', 'co-existence(rejecting_application, confirming_application)', 'co-existence(informing_go_about_failure, informing_go_about_success)', 'not-co-existence(rejecting_application, confirming_application)']",0,15,"['performing_equipment_acquisition', 'informing_mspo_about_assignment', 'reporting_meter_operation', 'informing_sp_about_assignment', 'informing_go_about_failure', 'informing_go_about_success', 'informing_mpon_about_failure', 'confirming_application', 'confirming_assignment', 'rejecting_application', 'informing_mspo_about_registration', 'informing_mpoo_about_registration', 'examining_application', 'informing_mpoo_about_assignment', 'assigning_mpon']",15
"Whenever a company makes the decision to go public, its first task is to select the underwriters. Underwriters act as financial midwives to a new issue. Usually they play a triple role : First they provide the company with procedural and financial advice, then they buy the issue, and finally they resell it to the public. Established underwriters are careful of their reputation and will not handle a new issue unless they believe the facts have been presented fairly. Thus, in addition to handling the sale of a company ’ s issue, the underwriters in effect give their seal of approval to it. They prepare a registration statement for the approval of the Securities and Exchange Commission (SEC). In addition to registering the issue with the SEC, they need to check that the issue complies with the so-called blue-sky laws of each state that regulate sales of securities within the state. While the registration statement is awaiting approval, underwriters begin to firm up the issue price. They arrange a road show to talk to potential investors. Immediately after they receive clearance from the SEC, underwriters fix the issue price. After that they enter into a firm commitment to buy the stock and then offer it to the public, when they haven ’ t still found any reason not to do it.","['existence(select underwriters)', 'response(receive clearance from the SEC, fix the issue price)', 'response(fix the issue price, enter into a firm commitment to buy the stock)', 'response(enter into a firm commitment to buy the stock, offer it to the public)', 'precedence(provide procedural and financial advice, buy the issue)', 'precedence(buy the issue, resell it to the public)', 'precedence(prepare a registration statement, register the issue with the SEC)']",1,7,"['enterintoafirmcommitmenttobuythestock', 'provideproceduralandfinancialadvice', 'receiveclearancefromtheSEC', 'offerittothepublic', 'registertheissuewiththeSEC', 'preparearegistrationstatement', 'fixtheissueprice', 'buytheissue', 'selectunderwriters', 'resellittothepublic']",10
"The process starts when a customer submits a claim by sending in relevant documentation. The Notification department at the car insurer checks the documents upon completeness and registers the claim. Then, the Handling department picks up the claim and checks the insurance. Then, an assessment is performed. If the assessment is positive, a garage is phoned to authorise the repairs and the payment is scheduled (in this order). Otherwise, the claim is rejected. In any case (whether the outcome is positive or negative), a letter is sent to the customer and the process is considered to be complete.","['existence(check_documents)', 'existence(register_claim)', 'existence(pick_up_claim)', 'existence(check_insurance)', 'existence(perform_assessment)', 'existence(send_letter)', 'response(perform_assessment, phone_garage)', 'response(perform_assessment, schedule_payment)', 'precedence(perform_assessment, phone_garage)', 'precedence(perform_assessment, schedule_payment)', 'co-existence(phone_garage, schedule_payment)', 'not-co-existence(reject_claim, phone_garage)', 'not-co-existence(reject_claim, schedule_payment)', 'not-co-existence(phone_garage, reject_claim)']",0,14,"['pick_up_claim', 'reject_claim', 'send_letter', 'check_insurance', 'schedule_payment', 'check_documents', 'register_claim', 'phone_garage', 'perform_assessment']",9
"The MPON notifies the MPOO about equipment change intentions. The MPOO announces self dismounting to the MPON or the MPOO shall notify the MPON about no self-dismounting of the MPOO. The MPON or the MPOO perform the final reading. The MPON or the MPOO dismount the old equipment. The MPON mounts the new device. The MPON reads the meter count from the installed meter. The MPON sents the values of the final reading to the GO. The MPON tells the GO about the device changes, the master data and the meter count at installation. The GO shall notify the MSP about the device changes, the master data, the meter count at dismounting, and the meter count at installation.","['existence(notify_equipment_change_intentions)', 'existence(perform_final_reading)', 'existence(dismount_old_equipment)', 'existence(mount_new_device)', 'existence(read_meter_count)', 'existence(send_final_reading_values)', 'existence(inform_device_changes_master_data_meter_count)', 'existence(notify_device_changes_master_data_meter_counts)', 'response(read_meter_count, send_final_reading_values)', 'response(read_meter_count, inform_device_changes_master_data_meter_count)', 'precedence(perform_final_reading, dismount_old_equipment)', 'precedence(dismount_old_equipment, mount_new_device)', 'precedence(mount_new_device, read_meter_count)', 'precedence(read_meter_count, send_final_reading_values)', 'co-existence(announce_self_dismounting, notify_no_self_dismounting)']",0,15,"['read_meter_count', 'notify_equipment_change_intentions', 'perform_final_reading', 'send_final_reading_values', 'notify_no_self_dismounting', 'mount_new_device', 'dismount_old_equipment', 'notify_device_changes_master_data_meter_counts', 'inform_device_changes_master_data_meter_count', 'announce_self_dismounting']",10
The MSPN registers the measurement at the GO. The GO examines the application of the MSPN. The GO rejects the application of the MSPN or the GO confirmes the application of the MSPN. The GO assigns the MSPN. The GO informs the MSPO about the assignment of MSPN. The GO informs the MPO about the assignment of the MSPN. The GO informs the SP about the assignment of MSPN.,"['at-most(rejects_application)', 'at-most(confirms_application)', 'existence(assigns_MSPN)', 'existence(informs_MSPO)', 'existence(informs_MPO)', 'existence(informs_SP)', 'existence(examines_application)', 'response(examines_application, rejects_application)', 'response(examines_application, confirms_application)', 'response(examines_application, assigns_MSPN)', 'response(assigns_MSPN, informs_MSPO)', 'response(assigns_MSPN, informs_MPO)', 'response(assigns_MSPN, informs_SP)', 'precedence(registers_measurement, examines_application)', 'not-co-existence(rejects_application, confirms_application)', 'not-succession(confirms_application, rejects_application)', 'not-succession(rejects_application, confirms_application)']",0,17,"['examines_application', 'rejects_application', 'confirms_application', 'informs_MSPO', 'registers_measurement', 'informs_MPO', 'assigns_MSPN', 'informs_SP']",8
"Every weekday morning, the database is backed up and then it is checked to see whether the Account Defaulter table has new records. If no new records are found, then the process should check the CRM system to see whether new returns have been filed. If new returns exist, then register all defaulting accounts and customers. If the defaulting client codes have not been previously advised, produce another table of defaulting accounts and send to account management. All of this must be completed by 2 : 30 pm, if it is not, then an alert should be sent to the supervisor. Once the new defaulting account report has been completed, check the CRM system to see whether new returns have been filed. If new returns have been filed, reconcile with the existing account defaulters table. This must be completed by 4 : 0 pm otherwise a supervisor should be sent a message.","['at-most(send_alert_supervisor)', 'existence(backup_database)', 'response(check_account_defaulter, check_crm_system)', 'response(check_crm_system, register_defaulting_accounts)', 'response(register_defaulting_accounts, produce_defaulting_accounts_table)', 'response(produce_defaulting_accounts_table, send_to_account_management)', 'response(produce_defaulting_accounts_table, check_crm_system)', 'response(check_crm_system, reconcile_account_defaulter)', 'precedence(send_alert_supervisor, check_crm_system)', 'not-co-existence(send_alert_supervisor, reconcile_account_defaulter)']",0,10,"['send_alert_supervisor', 'check_crm_system', 'send_to_account_management', 'register_defaulting_accounts', 'reconcile_account_defaulter', 'backup_database', 'check_account_defaulter', 'produce_defaulting_accounts_table']",8
"The INQ transmits the transaction data request to the IP. The IP checks the request of the INQ. The IP answers the question of the INQ depending on the outcome of the examination, i.e. Transmission of data or rejection.","['existence(transmit_data_request)', 'existence(check_request)', 'existence(answer_question)', 'response(check_request, answer_question)', 'precedence(transmit_data_request, check_request)']",0,5,"['check_request', 'answer_question', 'transmit_data_request']",3
"The process is triggered by the demand of a functional department to fill a post. The post is advertised, applicants apply, the applications are checked and the post is filled. The process finishes when the post was filled, precisely through the conclusion of a contract of employment.","['at-most(advertise_post)', 'at-most(apply)', 'existence(advertise_post)', 'response(advertise_post, apply)', 'response(apply, check_applications)', 'response(check_applications, fill_post)', 'response(fill_post, conclude_contract_of_employment)', 'precedence(apply, check_applications)', 'precedence(check_applications, fill_post)', 'precedence(fill_post, conclude_contract_of_employment)', 'not-co-existence(advertise_post, apply)']",1,11,"['conclude_contract_of_employment', 'apply', 'advertise_post', 'check_applications', 'fill_post']",5
"At the beginning the customer perceives that her subscribed service has degraded. A list with all the problem parameters is then sent to the Customer Service department of TELECO. At the customer service an employee enters (based on the received data) a problem report into system T.. Then the problem report is compared to the customer SLA to identify what the extent and the details of the service degradation are. Based on this, the necessary counter measures are determined including their respective priorities. An electronic service then determines the significance of the customer based on information that has been collected during the history of the contractual relationship. In case the customer is premium, the process will link to an extra problem fix process (this process will not be detailed here). In case the customer is of certain significance which would affect the counter measures previously decided upon, the process goes back to re-prioritize these measures otherwise the process continues. Taking together the information (i.e. contract commitment data + prioritized actions) a detailed problem report is created. The detailed problem report is then sent to Service Management. Service Management deals on a first level with violations of quality in services that are provided to customers. After receiving the detailed problem report, Service management investigates whether the problem is analyzable at the level of their department or whether the problem may be located at Resource Provisioning. In case Service Management assesses the problem to be not analyzable by themselves, the detailed problem report is sent out to Resource Provisioning. If Service Management is sure they can analyze it, they perform the analysis and based on the outcome they create a trouble report that indicates the type of problem. After Resource Provisioning receives the detailed problem report, it is checked whether there are any possible problems. If no problems are detected, a notification about the normal service execution is created. If a problem is detected this will be analyzed by Resource Provisioning and a trouble report is created. Either trouble report or the normal execution notification will be included in a status report and sent back to Service Management. Service Management then prepares the final status report based on the received information. Subsequently it has to be determined what counter measures should be taken depending on the information in the final status report. Three alternative process paths may be taken. For the case that no problem was detected at all, the actual service performance is sent back to the Customer Service. For the case that minor corrective actions are required, Service Management will undertake corrective actions by themselves. Subsequently, the problem resolution report is created and then sent out to Customer Service. After sending, this process path of Service Management ends. For the case that automatic resource restoration from Resource Provisioning is required, Service Management must create a request for automatic resource restoration. This message is then sent to Resource Provisioning. Resource Provisioning has been on-hold and waiting for a restoration request but this must happen within 2 days after the status report was sent out, otherwise Resource Provisioning terminates the process. After the restoration request is received, all possible errors are tracked. Based on the tracked errors, all necessary corrective actions are undertaken by Resource Provisioning. Then a trouble-shooting report is created. This report is sent out to Service Management ; then the process ends. The trouble-shooting report is received by Service Management and this information goes then into the creation of the problem resolution report just as described for ii). Customer Service either receives the actual service performance (if there was no problem) or the problem resolution report. Then, two concurrent activities are triggered, i.e. i) a report is created for the customer which details the current service performance and the resolution of the problem, and ii) an SLA violation rebate is reported to Billing & Collections who will adjust the billing. The report for the customer is sent out to her. After all three activities are completed the process ends within Customer Service. After the customer then receives the report about service performance and problem resolution from Customer Service, the process flow at the customer also ends.","['existence(customer_perceives_degraded_service)', 'response(customer_perceives_degraded_service, sends_problem_parameters_to_Customer_Service)', 'precedence(determines_counter_measures, creates_detailed_problem_report)', 'precedence(determines_customer_significance, creates_detailed_problem_report)', 'co-existence(Service_Management_investigates, analyzes_problem)', 'not-co-existence(undertakes_corrective_actions, creates_request_for_automatic_resource_restoration)']",0,6,"['undertakes_corrective_actions', 'customer_perceives_degraded_service', 'creates_request_for_automatic_resource_restoration', 'determines_customer_significance', 'sends_problem_parameters_to_Customer_Service', 'Service_Management_investigates', 'determines_counter_measures', 'creates_detailed_problem_report', 'analyzes_problem']",9
"The process starts periodically on the first of each month, when Assembler AG places an order with the supplier in order to request more product parts. a) Assembler AG sends the order to the supplier. b) The supplier processes the order. c) The supplier sends an invoice to Assembler AG. d) Assembler AG receives the invoice.","['existence(sends_order)', 'existence(processes_order)', 'existence(sends_invoice)', 'existence(receives_invoice)', 'response(sends_order, processes_order)', 'response(processes_order, sends_invoice)', 'response(sends_invoice, receives_invoice)', 'precedence(sends_order, processes_order)', 'precedence(processes_order, sends_invoice)', 'precedence(sends_invoice, receives_invoice)']",0,10,"['receives_invoice', 'sends_order', 'processes_order', 'sends_invoice']",4
"When a claim is received, it is first checked whether the claimant is insured by the organization. If not, the claimant is informed that the claim must be rejected. Otherwise, the severity of the claim is evaluated. Based on the outcome (simple or complex claims), relevant forms are sent to the claimant. Once the forms are returned, they are checked for completeness. If the forms provide all relevant details, the claim is registered in the Claims Management system, which ends the Claims Notification process. Otherwise, the claimant is informed to update the forms. Upon reception of the updated forms, they are checked again.","['at-most(register_claim)', 'existence(evaluate_severity)', 'existence(check_insured)', 'existence(send_forms)', 'existence(check_completeness)', 'response(check_insured, inform_reject)', 'response(check_insured, evaluate_severity)', 'response(check_insured, send_forms)', 'response(send_forms, return_forms)', 'response(return_forms, check_completeness)', 'response(check_completeness, register_claim)', 'response(inform_update, check_completeness)', 'not-succession(check_completeness, register_claim)']",0,13,"['return_forms', 'inform_update', 'send_forms', 'check_insured', 'register_claim', 'inform_reject', 'evaluate_severity', 'check_completeness']",8
"Once the dates are finalized (by the Coordination Unit), the Support Officer updates all group calendars and creates meeting folders for each meeting and ensures all appropriate documents are uploaded to system. Committee Members are advised a week before each meeting to read all related documents. The Committee Members hold their meeting, and the Support Office then produces minutes including any Action Points for each Committee Member. Within 5 working days, the Coordination Unit must conduct a QA check on the minutes, which are then sent to all Committee Members. The Support Officer then updates all departmental records.","['at-most(conduct_qa_check)', 'existence(hold_meeting)', 'response(update_group_calendars, create_meeting_folders)', 'response(hold_meeting, produce_minutes)', 'response(produce_minutes, conduct_qa_check)', 'response(conduct_qa_check, send_minutes)', 'precedence(conduct_qa_check, send_minutes)']",0,7,"['hold_meeting', 'create_meeting_folders', 'update_group_calendars', 'send_minutes', 'produce_minutes', 'conduct_qa_check']",6
"In November of each year, the Coordination Unit at the Town Planning Authority drafts a schedule of meetings for the next calendar year and adds draft dates to all calendars. The Support Officer then checks the dates and suggests modifications. The Coordination Unit then rechecks all dates and looks for potential conflicts. The final schedule of meeting dates is sent to all the independent Committee Members by email, who then check their diaries and advise the Coordination Unit of any conflicts.","['existence(date_checking)', 'existence(schedule_sending)', 'response(date_addition, date_checking)', 'response(date_checking, modification_suggestion)', 'response(schedule_sending, diary_checking)', 'precedence(schedule_drafting, date_addition)']",0,6,"['schedule_sending', 'schedule_drafting', 'date_checking', 'date_addition', 'modification_suggestion', 'diary_checking']",6
"First, the Manager checks the open leads. Afterwards, he selects the top five ones. He then tells his Sales Assistant to call the contact person of the leads. The Sales Assistant calls each customer. If someone is interested, he sends a note to the Manager. The Manager then processes the lead. Otherwise, he calls the next customer.","['at-most(send_note)', 'existence(check_open_leads)', 'existence(select_top_leads)', 'existence(call_contact_person)', 'existence(process_lead)', 'response(check_open_leads, select_top_leads)', 'response(select_top_leads, call_contact_person)', 'response(send_note, process_lead)', 'precedence(send_note, process_lead)', 'not-co-existence(send_note, process_lead)']",0,10,"['process_lead', 'call_contact_person', 'select_top_leads', 'check_open_leads', 'send_note']",5
"I am the HR clerk. When a vacancy is reported to me, I create a job description from the information. Sometimes there is still confusion in the message, then I must ask the Department again. I am submitting the job description for consideration and waiting for the approval. But, it can also happen that the department does not approve it, but rejects it, and requests a correction. Then I correct the description and submit it again for consideration. If the description is finally approved, I post the job.","['existence(create_job_description)', 'response(create_job_description, submit_job_description)', 'response(ask_Department, create_job_description)', 'response(submit_job_description, approval)', 'response(reject_description, correct_description)', 'response(correct_description, submit_job_description)', 'response(approval, post_job)', 'not-co-existence(approval, reject_description)']",0,8,"['create_job_description', 'correct_description', 'approval', 'ask_Department', 'submit_job_description', 'reject_description', 'post_job']",7
"If the MPOO sends the bill for the temporary continuation of the metering point operations to the GO, the GO examines the bill. If the MSPO sends the bill for the temporary continuation of the measurement to the GO, the GO examines the bill. If the MSPO sends the bill for additional readings to the GO, the GO examines the bill. If the MPOO sends the bill for the equipment acquisition to the MPON or the GO, the MPON or the GO examines the bill. The GO or the MPON confirms the invoice with payment advice to the MPOO or the MSPO, or the GO or the MPON rejects the invoice of the MPOO or the MSPO.","['at-most(confirm_invoice_with_payment_advice)', 'at-most(reject_invoice)', 'existence(examine_bill)', 'response(send_bill_temporary_continuation_metering_point_operations, examine_bill)', 'response(send_bill_temporary_continuation_measurement, examine_bill)', 'response(send_bill_additional_readings, examine_bill)', 'response(send_bill_equipment_acquisition, examine_bill)', 'not-co-existence(confirm_invoice_with_payment_advice, reject_invoice)']",0,8,"['reject_invoice', 'send_bill_equipment_acquisition', 'send_bill_temporary_continuation_measurement', 'confirm_invoice_with_payment_advice', 'send_bill_additional_readings', 'examine_bill', 'send_bill_temporary_continuation_metering_point_operations']",7
"I am the Head of the functional department. When I have detected a number of personnel requirements, I report the vacancy to the Personnel Department. Then I wait to get the job description for review before it is advertized. Under certain circumstances, I must ask for corrections again, otherwise I approve the job description. Sometimes it also happens that the colleague from the HR department still has questions about the tasks and requirements before he can describe the job. Then I am available for clarifications, of course.","['existence(report_vacancy)', 'existence(approve_job_description)', 'response(review_job_description, provide_clarifications)', 'response(get_job_description, provide_clarifications)', 'response(report_vacancy, get_job_description)', 'precedence(review_job_description, approve_job_description)', 'not-co-existence(request_corrections, approve_job_description)', 'not-succession(approve_job_description, request_corrections)']",1,8,"['report_vacancy', 'review_job_description', 'request_corrections', 'provide_clarifications', 'approve_job_description', 'get_job_description']",6
"Every time we get a new order from the sales department, first, one of my masters determines the necessary parts and quantities as well as the delivery date. Once that information is present, it has to be entered into our production planning system (PPS). It optimizes our production processes and creates possibly uniform work packages so that the setup times are minimized. Besides, it creates a list of parts to be procured. Unfortunately it is not coupled correctly to our Enterprise Resource Planning system (ERP), so the data must be transferred manually. By the way, that is the second step. Once all the data is present, we need to decide whether any parts are missing and must be procured or if this is not necessary. Once production is scheduled to start, we receive a notice from the system and an employee takes care of the implementation. Finally, the order will be checked again for its quality.","['at-most(determine_necessary_parts)', 'at-most(check_order_quality)', 'existence(determine_necessary_parts)', 'response(determine_necessary_parts, enter_data_into_PPS)', 'response(enter_data_into_PPS, decide_on_procurement)', 'response(decide_on_procurement, schedule_production)', 'response(schedule_production, implement_order)', 'response(implement_order, check_order_quality)']",0,8,"['check_order_quality', 'implement_order', 'determine_necessary_parts', 'decide_on_procurement', 'enter_data_into_PPS', 'schedule_production']",6
The MSPN sents a dismissal to the MSPO. The MSPO reviews the dismissal. The MSPO rejects the dismissal of the MSPN or The MSPO confirms the dismissal of the MSPN.,"['at-most(reviews_dismissal)', 'existence(sends_dismissal)', 'existence(reviews_dismissal)', 'response(sends_dismissal, reviews_dismissal)', 'precedence(reviews_dismissal, rejects_dismissal)', 'precedence(reviews_dismissal, confirms_dismissal)', 'not-co-existence(rejects_dismissal, confirms_dismissal)']",0,7,"['rejects_dismissal', 'reviews_dismissal', 'sends_dismissal', 'confirms_dismissal']",4
The SP / PU / GO request changes to the MPO or the MPO himself causes a change. The MPO reviews the change request. The MPO rejects the change of the measuring point by the SP / PU / GO or the MPO confirmes the request of the SP / PU / GO. The MPO performs the measuring point change. The MPO reports the implementation to the SP / PU / GO or notifies the SP / PU / GO about the failure of the changes.,"['existence(MPO_reviews_change_request)', 'existence(MPO_reports_implementation)', 'existence(MPO_notifies_failure)', 'response(MPO_reviews_change_request, MPO_confirms_request)', 'response(MPO_reviews_change_request, MPO_rejects_change)', 'response(MPO_confirms_request, MPO_performs_measuring_point_change)', 'not-co-existence(MPO_rejects_change, MPO_confirms_request)', 'not-co-existence(MPO_reports_implementation, MPO_notifies_failure)', 'not-succession(MPO_rejects_change, MPO_performs_measuring_point_change)']",0,9,"['MPO_rejects_change', 'MPO_notifies_failure', 'MPO_reports_implementation', 'MPO_performs_measuring_point_change', 'MPO_confirms_request', 'MPO_reviews_change_request']",6
"The Evanstonian is an upscale independent hotel. When a guest calls room service at The Evanstonian, the room-service manager takes down the order. She then submits an order ticket to the kitchen to begin preparing the food. She also gives an order to the sommelier (i.e., the wine waiter) to fetch wine from the cellar and to prepare any other alcoholic beverages. Eighty percent of room-service orders include wine or some other alcoholic beverage. Finally, she assigns the order to the waiter. While the kitchen and the sommelier are doing their tasks, the waiter readies a cart (i.e., puts a tablecloth on the cart and gathers silverware). The waiter is also responsible for nonalcoholic drinks. Once the food, wine, and cart are ready, the waiter delivers it to the guest ’ s room. After returning to the room-service station, the waiter debits the guest ’ s account. The waiter may wait to do the billing if he has another order to prepare or deliver.","['at-most(debit_guest_account)', 'existence(submit_order_ticket)', 'response(submit_order_ticket, fetch_wine)', 'response(submit_order_ticket, assign_order)', 'precedence(submit_order_ticket, fetch_wine)', 'precedence(submit_order_ticket, assign_order)', 'not-succession(debit_guest_account, deliver_order)', 'responded-existence(submit_order_ticket, fetch_wine)', 'responded-existence(submit_order_ticket, assign_order)']",0,9,"['debit_guest_account', 'fetch_wine', 'assign_order', 'submit_order_ticket', 'deliver_order']",5
"The process is initiated by a switch-over request. In doing so, the customer transmits his data to the customer service department of the company. Customer service is a shared service center between the departments Sales and Distribution. The customer data is received by customer service and based on this data a customer data object is entered into the CRM system. After customer data has been entered it should then be compared with the internal customer data base and checked for completeness and plausibility. In case of any errors these should be corrected on the basis of a simple error list. The comparison of data is done to prevent individual customer data being stored multiple times. In case the customer does not exist in the customer data base, a new customer object is being created which will remain the data object of interest during the rest of the process flow. This object consists of data elements such as the customers name and address and the assigned power gauge. The generated customer object is then used, in combination with other customer data to prepare the contract documents for the power supplier switch (including data such as bank connection, information on the selected rate, requested date of switch-over). In the following an automated check of the contract documents is carried out within the CIS (customer information system) in order to confirm their successful generation. In case of a negative response, i.e. the contract documents are not (or incorrectly) generated, the causing issues are being analyzed and resolved. Subsequently the contract documents are generated once again. In case of a positive response a confirmation document is sent out to the customer stating that the switch-over to the new supplier can be executed. A request to the grid operator is automatically sent out by the CIS. It puts the question whether the customer may be supplied by the selected supplier in the future. The switch-over request is checked by the grid operator for supplier concurrence, and the grid operator transmits a response comment. In the case of supplier concurrence the grid operator would inform all involved suppliers and demand the resolution of the conflict. The grid operator communicates with the old supplier and carries out the termination of the sales agreement between the customer and the old supplier (i.e. the customer service (of the new supplier) does not have to interact with the old supplier regarding termination). If there are not any objections by the grid operator (i.e. no supplier concurrence), customer service creates a CIS contract. The customer then has the chance to check the contract details and based on this check may decide to either withdraw from the switch contract or confirm it. Depending on the customers acceptance / rejection the process flow at customer service either ends (in case of withdrawal) or continues (in case of a confirmation). An additional constraint is that the customer can only withdraw from the offered contract within 7 days after the 7th day the contract will be regarded as accepted and the process continues. The confirmation message by the customer is therefore not absolutely necessary (as it will count as accepted after 7 days in any way) but it can speed up the switch process. On the switch-date, but no later than 10 days after power supply has begun, the grid operator transmits the power meter data to the customer service and the old supplier via messages containing a services consumption report. At the same time, the grid operator computes the final billing based on the meter data and sends it to the old supplier. Likewise the old supplier creates and sends the final billing to the customer. For the customer as well as the grid operator the process ends then. After receiving the meter data customer service imports the meter data to systems that require the information. The process of winning a new customer ends here.","['at-most(withdraw from switch contract)', 'existence(transmit customer data to customer service)', 'existence(enter customer data into CRM system)', 'existence(prepare contract documents)', 'existence(send confirmation document to customer)', 'existence(send request to grid operator)', 'existence(create CIS contract)', 'existence(check contract details)', 'response(enter customer data into CRM system, compare customer data with internal customer data base)', 'response(compare customer data with internal customer data base, correct errors)', 'response(prepare contract documents, automated check of contract documents)', 'response(automated check of contract documents, analyze and resolve issues)', 'response(analyze and resolve issues, generate contract documents again)', 'response(send confirmation document to customer, send request to grid operator)', 'response(check supplier concurrence, terminate sales agreement)', 'response(create CIS contract, check contract details)', 'not-co-existence(withdraw from switch contract, confirm contract)']",0,17,"['entercustomerdataintoCRMsystem', 'comparecustomerdatawithinternalcustomerdatabase', 'withdrawfromswitchcontract', 'preparecontractdocuments', 'sendconfirmationdocumenttocustomer', 'sendrequesttogridoperator', 'createCIScontract', 'checkcontractdetails', 'correcterrors', 'automatedcheckofcontractdocuments', 'transmitcustomerdatatocustomerservice', 'analyzeandresolveissues', 'confirmcontract', 'checksupplierconcurrence', 'terminatesalesagreement', 'generatecontractdocumentsagain']",16
"The process of an Office Supply Request starts when any employee of the organization submits an office supply request. Once the requirement is registered, the request is received by the immediate supervisor of the employee requesting the office supplies. The supervisor must approve or ask for a change, or reject the request. If the request is rejected the process will end. If the request is asked to make a change then it is returned to the petitioner / employee who can review the comments for the change request. If the request is approved it will go to the purchase department that will be in charge of making quotations (using a subprocess) and select a vendor. If the vendor is not valid in the system the purchase department will have to choose a different vendor. After a vendor is selected and confirmed, the system will generate and send a purchase order and wait for the product to be delivered and the invoice received. In any case the system will send a notification to let the user know what the result was. In any of the cases, approval, rejection or change required the system will send the user a notification.","['existence(submit_office_supply_request)', 'response(submit_office_supply_request, receive_request)', 'response(receive_request, approve_request)', 'response(receive_request, ask_for_change)', 'response(receive_request, reject_request)', 'response(ask_for_change, return_to_petitioner)', 'response(reject_request, send_notification)', 'response(approve_request, make_quotations)', 'response(select_vendor, confirm_vendor)', 'response(confirm_vendor, generate_purchase_order)', 'precedence(approve_request, make_quotations)']",0,11,"['return_to_petitioner', 'reject_request', 'approve_request', 'submit_office_supply_request', 'confirm_vendor', 'make_quotations', 'receive_request', 'ask_for_change', 'send_notification', 'select_vendor', 'generate_purchase_order']",11
The MSPO deregisters at the GO. The GO verifies the deregistration. The GO rejects the deregistration of the MSPO or the GO preliminarily confirms the deregistration of the MSPO. The GO assigns himself as MSP. The GO informs the MSPO about the end of the assignment and the beginning of the assignment of the GO. The GO informs the MPO about the assignment of the GO. The GO informs the SP about the assignment of the GO.,"['at-most(go_verifies)', 'existence(mspo_deregisters)', 'existence(go_assigns)', 'response(go_verifies, go_rejects)', 'response(go_verifies, go_preliminarily_confirms)', 'response(go_rejects, go_assigns)', 'response(go_preliminarily_confirms, go_assigns)', 'response(go_assigns, go_informs_mspo)', 'response(go_informs_mspo, go_informs_mpo)', 'response(go_informs_mpo, go_informs_sp)', 'precedence(go_verifies, go_rejects)', 'precedence(go_verifies, go_preliminarily_confirms)', 'not-co-existence(go_rejects, go_preliminarily_confirms)']",0,13,"['go_rejects', 'go_assigns', 'go_verifies', 'go_preliminarily_confirms', 'mspo_deregisters', 'go_informs_sp', 'go_informs_mpo', 'go_informs_mspo']",8
"The fault detector reports a failure to the MPO or MPO has a suspicion of their own fault. The MPO shall examine the failure. The MPO rejects the failure of the fault detector or the MPO confirms the failure of the fault detector. If the MPO confirms the failure of the fault detector, he informes the GO and the MSP. The MPO fixes the fault at the measuring device. The MPO shares the results of the repairs carried out with the fault detector. The MPO will inform the GO about the resolution of the interference. The MPO will inform the MSP about the resolution of the interference.","['at-most(inform_GO_resolution)', 'at-most(inform_MSP_resolution)', 'existence(examine_failure)', 'response(confirm_failure, inform_GO)', 'response(confirm_failure, inform_MSP)', 'response(confirm_failure, fix_fault)', 'response(fix_fault, share_results)', 'response(confirm_failure, inform_GO_resolution)', 'response(confirm_failure, inform_MSP_resolution)', 'not-co-existence(reject_failure, confirm_failure)']",0,10,"['inform_MSP', 'reject_failure', 'examine_failure', 'fix_fault', 'confirm_failure', 'inform_GO', 'share_results', 'inform_MSP_resolution', 'inform_GO_resolution']",9
"The intake workflow starts with a notice by telephone at the secretarial office of the mental health care institute. This notice is done by the family doctor of somebody who is in need of mental treatment. The secretarial worker inquires after the name and residence of the patient. On the basis of this information, the doctor is put through to the nursing officer responsible for the part of the region that the patient lives in. The nursing officer makes a full inquiry into the mental, health, and social state of the patient in question. This information is recorded on a registration form. At the end of the conversation, this form is handed in at the secretarial office of the institute. Here, the information on the form is stored in the information system and subsequently printed. For new patients, a patient file is created. The registration form as well as the print from the information system are stored in the patient file. Patient files are kept at the secretarial office and may not leave the building. At the secretarial office, two registration cards are produced for respectively the future first and second intaker of the patient. The registration card contains a set of basic patient data. The new patient is added on the list of new notices. Halfway the week, at Wednesday, a staff meeting of the entire medical team takes place. The medical team consists of social-medical workers, physicians, and a psychiatrist. At this meeting, the team-leader assigns all new patients on the list of new notices to members of the team. Each patient will be assigned to a social-medical worker, who will act as the first intaker of the patient. One of the physicians will act as the second intaker. In assigning intakers, the teamleader takes into account their expertise, the region they are responsible for, earlier contacts they might have had with the patient, and their case load. The assignments are recorded on an assignment list which is handed to the secretarial office. For each new assignment, it is also determined whether the medical file of the patient is required. This information is added to the assignment list. The secretarial office stores the assignment of each patient of the assignment list in the information system. It passes the produced registration cards to the first and second intaker of each newly assigned patient. An intaker keeps this registration with him at times when visiting the patient and in his close proximity when he is at the office. For each patient for which the medical file is required, the secretarial office prepares and sends a letter to the family doctor of the patient, requesting for a copy of the medical file. As soon as this copy is received, the secretarial office will inform the second intaker and add the copy to the patient file. The first intaker plans a meeting with the patient as soon as this is possible. During the first meeting, the patient is examined using a standard checklist which is filled out. Additional observations are registered in a personal notebook. After a visit, the first intaker puts a copy of these notes in the file of a patient. The standard checklist is also added to the patients file. The second intaker plans the first meeting only after the medical information of the physician if required has been received. Physicians use dictaphones to record their observations made during meetings with patients. The secretarial office types out these tapes, after which the information is added to the patient file. As soon as the meetings of the first and second intaker with the patient have taken place, the secretarial office puts the patient on the list of patients that reach this status. For the staff meeting on Wednesday, they provide the team-leader with a list of these patients. For each of these patients, the first and second intaker together with the team-leader and the attending psychiatrist formulate a treatment plan. This treatment plan formally ends the intake procedure.","['existence(notice_by_telephone)', 'existence(inquire_patient_info)', 'existence(assign_nursing_officer)', 'existence(make_inquiry)', 'existence(record_info)', 'existence(hand_in_form)', 'existence(store_info)', 'existence(print_info)', 'existence(create_patient_file)', 'response(notice_by_telephone, inquire_patient_info)', 'response(inquire_patient_info, assign_nursing_officer)', 'response(assign_nursing_officer, make_inquiry)', 'response(make_inquiry, record_info)', 'response(record_info, hand_in_form)', 'response(hand_in_form, store_info)', 'response(store_info, print_info)', 'response(print_info, create_patient_file)', 'response(add_to_list, staff_meeting)', 'response(staff_meeting, assign_intakers)', 'response(assign_intakers, determine_medical_file_required)', 'response(determine_medical_file_required, store_assignment)', 'response(store_assignment, pass_registration_cards)', 'response(pass_registration_cards, plan_meeting)', 'response(receive_medical_file, add_to_patient_file)', 'response(examine_patient, record_observations)', 'response(record_observations, add_to_patient_file)', 'response(type_out_tapes, add_to_patient_file)', 'response(add_to_patient_file, formulate_treatment_plan)', 'co-existence(produce_registration_cards, add_to_list)', 'not-co-existence(plan_meeting, receive_medical_file)']",0,30,"['hand_in_form', 'add_to_list', 'plan_meeting', 'determine_medical_file_required', 'notice_by_telephone', 'examine_patient', 'make_inquiry', 'receive_medical_file', 'assign_nursing_officer', 'assign_intakers', 'staff_meeting', 'inquire_patient_info', 'add_to_patient_file', 'create_patient_file', 'store_assignment', 'record_info', 'record_observations', 'type_out_tapes', 'store_info', 'formulate_treatment_plan', 'pass_registration_cards', 'produce_registration_cards', 'print_info']",23
"The Customer Service Representative sends a Mortgage offer to the customer and waits for a reply. If the customer calls or writes back declining the mortgage, the case details are updated and the work is then archived prior to cancellation. If the customer sends back the completed offer documents and attaches all prerequisite documents then the case is moved to administration for completion. If all pre-requisite documents are not provided a message is generated to the customer requesting outstanding documents. If no answer is received after 2 weeks, the case details are updated prior to archive and cancellation.","['existence(archive)', 'existence(cancellation)', 'response(send_mortgage_offer, wait_for_reply)', 'response(verify_prerequisite_documents, generate_message)', 'precedence(send_completed_offer_documents, verify_prerequisite_documents)', 'co-existence(send_completed_offer_documents, verify_prerequisite_documents)', 'not-co-existence(send_mortgage_offer, archive)', 'not-succession(verify_prerequisite_documents, send_mortgage_offer)']",0,8,"['generate_message', 'verify_prerequisite_documents', 'cancellation', 'send_mortgage_offer', 'wait_for_reply', 'archive', 'send_completed_offer_documents']",7
"The MPOO deregisters at the GO. The GO verifies the deregistration. The GO rejects the deregistration of the MPOO or the GO preliminarily confirms the deregistration of the MPOO. The GO prepares the readmission of the measuring point. Optionally, the GO may oblige the MPOO to continue the operations. If the GO binds the MPOO to continue the operation, the MPOO confirmes the continuation to the MPOO. The GO performs the equipment acquisition and / or equipment changes. The GO assigns the GO as MPO. The GO informs the MPOO about the end of the assignment of the MPOO and the beginning of the assignment of the GO. The GO informs the MSPO about the assignment of the GO. The GO informs the SP about the assignment of the GO.","['existence(MPOO_deregistration)', 'response(MPOO_deregistration, GO_verification)', 'response(GO_verification, GO_rejection)', 'response(GO_verification, GO_preliminary_confirmation)', 'response(GO_preliminary_confirmation, GO_readmission_preparation)', 'response(GO_preliminary_confirmation, GO_continuation_obligation)', 'response(GO_continuation_obligation, MPOO_continuation_confirmation)', 'response(GO_equipment_acquisition, GO_MPO_assignment)', 'response(GO_MPO_assignment, GO_MPOO_assignment_info)', 'response(GO_MPO_assignment, GO_MSPO_assignment_info)', 'response(GO_MPO_assignment, GO_SP_assignment_info)', 'precedence(GO_preliminary_confirmation, GO_continuation_obligation)', 'not-co-existence(GO_rejection, GO_preliminary_confirmation)']",0,13,"['GO_readmission_preparation', 'GO_MPO_assignment', 'MPOO_continuation_confirmation', 'GO_MPOO_assignment_info', 'GO_preliminary_confirmation', 'GO_verification', 'GO_MSPO_assignment_info', 'GO_rejection', 'MPOO_deregistration', 'GO_continuation_obligation', 'GO_equipment_acquisition', 'GO_SP_assignment_info']",12
"The process of Vacations Request starts when any employee of the organization submits a vacation request. Once the requirement is registered, the request is received by the immediate supervisor of the employee requesting the vacation. The supervisor must approve or reject the request. If the request is rejected, the application is returned to the applicant / employee who can review the rejection reasons. If the request is approved a notification is generated to the Human Resources Representative, who must complete the respective management procedures.","['existence(submit_vacation_request)', 'response(receive_request, approve_request)', 'response(receive_request, reject_request)', 'response(approve_request, notify_hr)', 'response(approve_request, manage_vacation_request)', 'response(reject_request, review_rejection)', 'precedence(submit_vacation_request, receive_request)', 'co-existence(approve_request, not reject_request)', 'co-existence(reject_request, not approve_request)', 'not-co-existence(approve_request, reject_request)']",1,10,"['notify_hr', 'reject_request', 'notapprove_request', 'approve_request', 'submit_vacation_request', 'receive_request', 'manage_vacation_request', 'notreject_request', 'review_rejection']",9
"As a basic principle, ACME AG receives invoices on paper or fax. These are received by the Secretariat in the central inbox and forwarded after a short visual inspection to an accounting employee. In `` ACME Financial Accounting ``, a software specially developed for the ACME AG, she identifies the charging suppliers and creates a new instance (invoice). She then checks the invoice items and notes the corresponding cost center at the ACME AG and the related cost center managers for each position on a separate form (`` docket ``). The docket and the copy of the invoice go to the internal mail together and are sent to the first cost center manager to the list. He reviews the content for accuracy after receiving the copy of the invoice. Should everything be in order, he notes his code one on the docket (`` accurate position - AP ``) and returns the copy of the invoice to the internal mail. From it, the copy of the invoice is passed on to the next cost center manager, based on the docket, or if all items are marked correct, sent back to accounting. Therefore, the copy of invoice and the docket gradually move through the hands of all cost center managers until all positions are marked as completely accurate. However, if inconsistencies exist, e.g. because the ordered product is not of the expected quantity or quality, the cost center manager rejects the AP with a note and explanatory statement on the docket, and the copy of the invoice is sent back to accounting directly. Based on the statements of the cost center managers, she will proceede with the clarification with the vendor, but, if necessary, she consults the cost center managers by telephone or e-mail again. When all inconsistencies are resolved, the copy of the invoice is sent to the cost center managers again, and the process continues. After all invoice items are AP, the accounting employee forwards the copy of the invoice to the commercial manager. He makes the commercial audit and issues the approval for payment. If the bill amount exceeds EUR 20, the Board wants to check it again (4 - eyes-principle). The copy of the invoice including the docket moves back to the accounting employee in the appropriate signature file. Should there be a complaint during the commercial audit, it will be resolved by the accounting employee with the supplier. After the commercial audit is successfully completed, the accounting employee gives payment instructions and closes the instance in `` ACME financial accounting ``.","['at-most(rejecting_AP)', 'existence(receiving_invoices)', 'existence(identifying_charging_suppliers)', 'existence(creating_invoice_instance)', 'existence(checking_invoice_items)', 'existence(noting_cost_center)', 'response(receiving_invoices, forwarding_invoices)', 'response(forwarding_invoices, identifying_charging_suppliers)', 'response(identifying_charging_suppliers, creating_invoice_instance)', 'response(creating_invoice_instance, checking_invoice_items)', 'response(checking_invoice_items, noting_cost_center)', 'response(noting_cost_center, sending_docket_and_invoice)', 'response(reviewing_content, marking_position_as_accurate)', 'response(marking_position_as_accurate, returning_invoice)', 'response(rejecting_AP, clarifying_inconsistencies)', 'response(clarifying_inconsistencies, sending_invoice_to_cost_center_managers_again)', 'response(forwarding_invoice_to_commercial_manager, commercial_audit)', 'response(commercial_audit, issuing_approval_for_payment)', 'precedence(issuing_approval_for_payment, giving_payment_instructions)', 'not-co-existence(clarifying_inconsistencies, marking_position_as_accurate)']",0,20,"['noting_cost_center', 'creating_invoice_instance', 'clarifying_inconsistencies', 'identifying_charging_suppliers', 'receiving_invoices', 'returning_invoice', 'marking_position_as_accurate', 'commercial_audit', 'giving_payment_instructions', 'forwarding_invoices', 'checking_invoice_items', 'sending_docket_and_invoice', 'reviewing_content', 'sending_invoice_to_cost_center_managers_again', 'forwarding_invoice_to_commercial_manager', 'rejecting_AP', 'issuing_approval_for_payment']",17
"The first step is to determine contact details of potential customers. This can be achieved in several ways. Sometimes, we buy details for cold calls, sometimes, our marketing staff participates in exhibitions and sometimes, you just happen to know somebody, who is interested in the product. Then we start calling the customer. That is done by the call center staff. They are determining the contact person and the budget which would be available for the project. Of course, asking the customer whether he is generally interested is also important. If this is not the case, we leave him alone, except if the potential project budget is huge. Then the head of development personally tries to acquire the customer. If the customer is interested in the end, the next step is a detailed online presentation. It is given either by a sales representative or by a pre-sales employee in case of a more technical presentation. Afterwards we are waiting for the customer to come back to us. If we are not contacted within 2 weeks, a sales representative is calling the customer. The last phase is the creation of a quotation.","['existence(determine_contact_details)', 'existence(call_customer)', 'existence(create_quotation)', 'response(call_customer, determine_contact_person_and_budget)', 'response(call_customer, ask_interest)', 'response(ask_interest, acquire_customer)', 'response(online_presentation, wait_for_customer)', 'precedence(online_presentation, wait_for_customer)', 'co-existence(determine_contact_details, buy_details)', 'co-existence(determine_contact_details, participate_in_exhibitions)', 'co-existence(determine_contact_details, know_interested_customer)', 'not-succession(wait_for_customer, online_presentation)']",0,12,"['ask_interest', 'wait_for_customer', 'participate_in_exhibitions', 'buy_details', 'online_presentation', 'determine_contact_details', 'create_quotation', 'acquire_customer', 'call_customer', 'know_interested_customer', 'determine_contact_person_and_budget']",11
"After the Expense Report is received, a new account must be created if the employee does not already have one. The report is then reviewed for automatic approval. Amounts under $200 are automatically approved, whereas amounts equal to or over $200 require approval of the supervisor. In case of rejection, the employee must receive a rejection notice by email. Otherwise, the reimbursement goes to the employees direct deposit bank account. If the request is not completed in 7 days, then the employee must receive an approval in progress email. If the request is not finished within 30 days, then the process is stopped and the employee receives an email cancellation notice and must re-submit the expense report.","['existence(review_report)', 'existence(send_cancellation_notice)', 'response(review_report, automatic_approval)', 'response(review_report, supervisor_approval)', 'response(supervisor_approval, reimbursement)', 'response(automatic_approval, reimbursement)', 'response(send_rejection_notice, re_submit_report)', 'response(send_cancellation_notice, re_submit_report)', 'response(review_report, send_approval_in_progress_email)', 'precedence(supervisor_approval, reimbursement)', 'precedence(send_cancellation_notice, re_submit_report)', 'not-co-existence(send_rejection_notice, reimbursement)', 'not-succession(reimbursement, send_cancellation_notice)']",1,13,"['send_approval_in_progress_email', 're_submit_report', 'automatic_approval', 'review_report', 'supervisor_approval', 'send_cancellation_notice', 'reimbursement', 'send_rejection_notice']",8
The MPON requests a device takeover bid of the MPOO. The MPOO sends a tender for the equipment takeover to the MPON. The MPON places an order at the MPOO. The MPOO confirms the order of the MPON and sends the master data.,"['existence(request_bid)', 'response(request_bid, send_tender)', 'response(send_tender, place_order)', 'precedence(place_order, confirm_order)', 'precedence(place_order, send_master_data)', 'co-existence(confirm_order, send_master_data)']",0,6,"['request_bid', 'confirm_order', 'send_master_data', 'send_tender', 'place_order']",5
"Each morning, the files which have yet to be processed need to be checked, to make sure they are in order for the court hearing that day. If some files are missing, a search is initiated, otherwise the files can be physically tracked to the intended location. Once all the files are ready, these are handed to the Associate, and meantime the Judgeis Lawlist is distributed to the relevant people. Afterwards, the directions hearings are conducted.","['at-most(searching_files)', 'at-most(tracking_files)', 'existence(checking_files)', 'response(checking_files, handing_files_to_associate)', 'response(checking_files, distributing_judges_lawlist)', 'precedence(handing_files_to_associate, conducting_directions_hearings)', 'precedence(distributing_judges_lawlist, conducting_directions_hearings)', 'co-existence(handing_files_to_associate, distributing_judges_lawlist)']",0,8,"['checking_files', 'conducting_directions_hearings', 'searching_files', 'tracking_files', 'distributing_judges_lawlist', 'handing_files_to_associate']",6
"Mail from the party is collected on a daily basis by the Mail Processing Unit. Within this unit, the Mail Clerk sorts the unopened mail into the various business areas. The mail is then distributed. When the mail is received by the Registry, it is opened and sorted into groups for distribution, and thus registered in a manual incoming Mail Register. Afterwards, the Assistant Registry Manager within the Registry performs a quality check. If the mail is not compliant, a list of requisition explaining the reason for rejection is compiled and sent back to the party. Otherwise, the matter details (types of action) are captured and provided to the Cashier, who takes the applicable fees attached to the mail. At this point, the Assistant Registry Manager puts the receipt and copied documents into an envelope and posts it to the party. Meantime, the Cashier captures the Party Details and prints the Physical Court File.","['existence(mail_collection)', 'existence(registry)', 'existence(capturing_matter_details)', 'existence(fee_collection)', 'existence(posting)', 'existence(capturing_party_details)', 'existence(printing_physical_court_file)', 'response(quality_check, compilation_requisition)', 'response(registry, capturing_matter_details)', 'response(capturing_matter_details, fee_collection)', 'response(fee_collection, posting)', 'precedence(mail_collection, sorting)', 'precedence(sorting, distribution)', 'precedence(distribution, registry)', 'precedence(registry, quality_check)']",0,15,"['mail_collection', 'fee_collection', 'registry', 'quality_check', 'compilation_requisition', 'capturing_matter_details', 'posting', 'capturing_party_details', 'distribution', 'printing_physical_court_file', 'sorting']",11
"The loan approval process starts by receiving a customer request for a loan amount. The risk assessment Web service is invoked to assess the request. If the loan is small and the customer is low risk, the loan is approved. If the customer is high risk, the loan is denied. If the customer needs further review or the loan amount is for $10,000 or more, the request is sent to the approver Web service. The customer receives feedback from the assessor or approver.","['existence(invoke_risk_assessment)', 'response(invoke_risk_assessment, approve_loan or deny_loan or send_to_approver)', 'response(approve_loan, receive_feedback)', 'response(deny_loan, receive_feedback)', 'response(send_to_approver, receive_feedback)', 'not-co-existence(approve_loan, deny_loan)', 'not-co-existence(approve_loan, send_to_approver)', 'not-co-existence(deny_loan, send_to_approver)']",0,8,"['approve_loanordeny_loanorsend_to_approver', 'invoke_risk_assessment', 'approve_loan', 'send_to_approver', 'deny_loan', 'receive_feedback']",6
"After a claim is registered, it is examined by a claims officer. The claims officer then writes a settlement recommendation. This recommendation is then checked by a senior claims officer who may mark the claim as OK or Not OK. If the claim is marked as Not OK, it is sent back to the claims officer and the recommendation is repeated. If the claim is OK, the claim handling process proceeds.","['existence(register_claim)', 'existence(examine_claim)', 'existence(write_settlement_recommendation)', 'existence(check_recommendation)', 'existence(mark_claim_OK_or_Not_OK)', 'response(examine_claim, write_settlement_recommendation)', 'response(write_settlement_recommendation, check_recommendation)', 'response(mark_claim_OK_or_Not_OK, proceed_claim_handling)', 'response(mark_claim_OK_or_Not_OK, send_back_to_claims_officer)', 'response(send_back_to_claims_officer, write_settlement_recommendation)', 'precedence(write_settlement_recommendation, mark_claim_OK_or_Not_OK)', 'not-co-existence(send_back_to_claims_officer, proceed_claim_handling)']",0,12,"['mark_claim_OK_or_Not_OK', 'send_back_to_claims_officer', 'write_settlement_recommendation', 'register_claim', 'examine_claim', 'check_recommendation', 'proceed_claim_handling']",7
"The party sends a warrant possession request asking a warrant to be released. The Client Service Back Office as part of the Small Claims Registry Operations receives the request and retrieves the SCT file. Then, the SCT Warrant Possession is forwarded to Queensland Police. The SCT physical file is stored by the Back Office awaiting a report to be sent by the Police. When the report is received, the respective SCT file is retrieved. Then, Back Office attaches the new SCT document, and stores the expanded SCT physical file. After that, some other MC internal staff receives the physical SCT file (out of scope).","['at-most(receives_report)', 'at-most(retrieves_SCT_file)', 'existence(sends_warrant_possession_request)', 'existence(receives_report)', 'response(forwards_SCT_Warrant_Possession_to_Queensland_Police, receives_report)', 'response(receives_report, retrieves_SCT_file_again)', 'response(receives_report, attaches_new_SCT_document)', 'response(attaches_new_SCT_document, stores_expanded_SCT_physical_file)', 'response(retrieves_SCT_file, forwards_SCT_Warrant_Possession_to_Queensland_Police)', 'precedence(sends_warrant_possession_request, retrieves_SCT_file)', 'precedence(retrieves_SCT_file, forwards_SCT_Warrant_Possession_to_Queensland_Police)', 'co-existence(attaches_new_SCT_document, stores_expanded_SCT_physical_file)', 'not-co-existence(stores_SCT_physical_file, receives_report)']",0,13,"['attaches_new_SCT_document', 'stores_expanded_SCT_physical_file', 'stores_SCT_physical_file', 'receives_report', 'retrieves_SCT_file_again', 'forwards_SCT_Warrant_Possession_to_Queensland_Police', 'retrieves_SCT_file', 'sends_warrant_possession_request']",8
"The Police Report related to the car accident is searched within the Police Report database and put in a file together with the Claim Documentation. This file serves as input to a claims handler who calculates an initial claim estimate. Then, the claims handler creates an Action Plan based on an Action Plan Checklist available in the Document Management system. Based on the Action Plan, a claims manager tries to negotiate a settlement on the claim estimate. The claimant is informed of the outcome, which ends the process.","['existence(search_Police_Report)', 'existence(put_in_file)', 'response(put_in_file, calculate_initial_claim_estimate)', 'response(calculate_initial_claim_estimate, create_Action_Plan)', 'response(create_Action_Plan, negotiate_settlement)', 'response(negotiate_settlement, inform_claimant)']",0,6,"['create_Action_Plan', 'negotiate_settlement', 'search_Police_Report', 'inform_claimant', 'put_in_file', 'calculate_initial_claim_estimate']",6
The GO requests the measurements to the MSP. The MSP checks the received request. The MSP denies the request of the GO or the MSP performs the measurement. The MSP informs the GO about the failure of the reading or the MSP transmits the measured values to the GO. The GO processes the measured values. The GO sends the changed values to the MSP. The GO transmit the readings to the SP.,"['response(perform_measurement, transmit_values)', 'response(transmit_values, process_values)', 'response(process_values, send_changed_values)', 'precedence(check_request, deny_request)', 'precedence(check_request, perform_measurement)', 'precedence(check_request, transmit_values)', 'precedence(check_request, inform_failure)', 'not-co-existence(deny_request, perform_measurement)', 'not-succession(inform_failure, transmit_values)']",0,9,"['deny_request', 'inform_failure', 'transmit_values', 'process_values', 'send_changed_values', 'check_request', 'perform_measurement']",7
"An employee purchases a product or service he requires. For instance, a sales person on a trip rents a car. The employee submits an expense report with a list of items, along with the receipts for each item. A supervisor reviews the expense report and approves or rejects the report. Since the company has expense rules, there are circumstances where the supervisor can accept or reject the report upon first inspection. These rules could be automated, to reduce the workload on the supervisor. If the supervisor rejects the report, the employee, who submitted it, is given a chance to edit it, for example to correct errors or better describe an expense. If the supervisor approves the report, it goes to the treasurer. The treasurer checks that all the receipts have been submitted and match the items on the list. If all is in order, the treasurer accepts the expenses for processing (including, e.g., payment or refund, and accounting). If receipts are missing or do not match the report, he sends it back to the employee. If a report returns to the employee for corrections, it must again go to a supervisor, even if the supervisor previously approved the report. If the treasurer accepts the expenses for processing, the report moves to an automatic activity that links to a payment system. The process waits for the payment confirmation. After the payment is confirmed, the process ends.","['existence(reviews_expense_report)', 'existence(links_to_payment_system)', 'response(reviews_expense_report, approves_report)', 'response(reviews_expense_report, rejects_report)', 'response(rejects_report, edits_expense_report)', 'response(edits_expense_report, reviews_expense_report)', 'response(approves_report, checks_receipts)', 'response(checks_receipts, accepts_expenses)', 'response(accepts_expenses, links_to_payment_system)', 'response(links_to_payment_system, waits_for_payment_confirmation)', 'precedence(approves_report, checks_receipts)', 'not-co-existence(reviews_expense_report, edits_expense_report)']",0,12,"['links_to_payment_system', 'checks_receipts', 'accepts_expenses', 'edits_expense_report', 'approves_report', 'waits_for_payment_confirmation', 'reviews_expense_report', 'rejects_report']",8
"A small company manufactures customized bicycles. Whenever the sales department receives an order, a new process instance is created. A member of the sales department can then reject or accept the order for a customized bike. In the former case, the process instance is finished. In the latter case, the storehouse and the engineering department are informed. The storehouse immediately processes the part list of the order and checks the required quantity of each part. If the part is available in-house, it is reserved. If it is not available, it is back-ordered. This procedure is repeated for each item on the part list. In the meantime, the engineering department prepares everything for the assembling of the ordered bicycle. If the storehouse has successfully reserved or back-ordered every item of the part list and the preparation activity has finished, the engineering department assembles the bicycle. Afterwards, the sales department ships the bicycle to the customer and finishes the process instance.","['existence(receive_order)', 'response(receive_order, accept_order or reject_order)', 'response(accept_order, inform_departments)', 'response(inform_departments, process_part_list)', 'response(inform_departments, prepare_assembly)', 'response(process_part_list, reserve_or_backorder_parts)', 'response(prepare_assembly, assemble_bicycle)', 'response(reserve_or_backorder_parts, assemble_bicycle)', 'response(assemble_bicycle, ship_bicycle)', 'not-co-existence(accept_order, reject_order)']",0,10,"['receive_order', 'assemble_bicycle', 'reserve_or_backorder_parts', 'process_part_list', 'prepare_assembly', 'ship_bicycle', 'inform_departments', 'reject_order', 'accept_orderorreject_order', 'accept_order']",10
